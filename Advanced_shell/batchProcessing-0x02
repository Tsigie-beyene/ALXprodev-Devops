#!/bin/bash

POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
API_BASE="https://pokeapi.co/api/v2/pokemon"
OUT_DIR="pokemon_data"
ERROR_FILE="errors.txt"

mkdir -p "$OUT_DIR"
: > "$ERROR_FILE"  # Clear error file before starting

for NAME in "${POKEMON_LIST[@]}"; do
    echo "Fetching data for $NAME..."
    ATTEMPTS=0
    SUCCESS=0

    while [ $ATTEMPTS -lt 3 ]; do  # Retry up to 3 times
        RESPONSE=$(curl -s -f "$API_BASE/$NAME")
        if [[ $? -eq 0 ]]; then
            echo "$RESPONSE" > "$OUT_DIR/${NAME}.json"
            echo "Saved data to $OUT_DIR/${NAME}.json âœ…"

            # Extract and format output
            pokemon_name=$(echo "$RESPONSE" | jq -r '.name' | sed 's/.*/\u&/')
            type=$(echo "$RESPONSE" | jq -r '.types[0].type.name' | sed 's/.*/\u&/')
            height=$(echo "$RESPONSE" | jq -r '.height')
            weight=$(echo "$RESPONSE" | jq -r '.weight')
            formatted_height=$(awk "BEGIN { printf \"%.1f\", $height / 10 }")
            formatted_weight=$(awk "BEGIN { printf \"%.0f\", $weight / 10 }")

            echo "$pokemon_name is of type $type, weighs ${formatted_weight}kg, and is ${formatted_height}m tall."
            SUCCESS=1
            break
        else
            ((ATTEMPTS++))
            sleep 1
        fi
    done

    if [[ $SUCCESS -eq 0 ]]; then
        echo "Failed to fetch $NAME after 3 attempts" >> "$ERROR_FILE"
    fi
done
